Jan 8th Added spherical linear interpolation. It doesn't work perfectly yet and gets stuck at certain values.

The read.c is now integrated to the main function to read an rt file. I will split it according to the norm after making sure it works perfectly. I made test.rt for testing any objects, so just execute:
./miniRT ./test.rt

Since the mandatory .rt files are supposed to create scenes where we see the objects, we can assume that:
right = normal vector 1,0,0
left = -1,0,0
up = 0,1,0
down = 0,-1,0
forward = 0,0,1
backward = 0,0,-1


Process:
-validate
-set up the scene from .rt
-generate 3d objects, light, camera
-set camera position
-calculate if camera ray vector hits the object, and the magnitude of this vector
-calculate colour for the pixel based on the distance
-add ambient light
-add light
-render the scene

What it does currently:
-Initialises the window, can exit by clicking the cross or with esc
-The user is able to select objects and move them around
-Reads any .rt file and converts the values from there to the mrt struct
-Calculates the camera rotation
-renders objects with basic lighting

Functions needed:
-Calculate cylinder normal vector in the render calculate_colour() function
-Improve ambient light
-Handling the light. Trace the ray from the light source and check if it hits and object. The current light diffusion model is not a ray tracing model, it is only temporary for testing other functions
